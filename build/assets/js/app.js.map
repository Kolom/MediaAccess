{"version":3,"sources":["app.js","index.js"],"names":[],"mappingsfile":"app.js","sourcesContent":["","/**\n * Initialize form event listeners\n */\nfunction initForm() {\n    var accountForm = document.querySelector('.new_account_form--customer');\n    var passwordInput = document.querySelector('#password-input');\n\n    accountForm.onsubmit = submitAccountForm;\n    passwordInput.oninput = checkPassStrength;\n}\n\nwindow.onload = function () {\n    initForm();\n};\n\n//Event handlers section\n\n/**\n * Form submit\n *\n * @returns {boolean} - form common validation result\n */\nfunction submitAccountForm() {\n    var account = getAccountObj();\n    var accountValidationResult = validateAccount(account);\n    renderValidationMessages(accountValidationResult);\n\n    return false;\n}\n\n/**\n * Check password strength and show appropriate notification indicator\n *\n * @param e - input event\n */\nfunction checkPassStrength(e) {\n    console.log(e);\n    var passLength = e.target.value.length;\n\n    //get indicators\n    var firstLevelStrength = document.querySelector('.pass-str-indicator > .first_level');\n    var secondLevelStrength = document.querySelector('.pass-str-indicator > .sec_level');\n    var thirdLevelStrength = document.querySelector('.pass-str-indicator > .third_level');\n    var fourthLevelStrength = document.querySelector('.pass-str-indicator > .fourth_level');\n\n    //hide all\n    firstLevelStrength.classList.add('hidden');\n    secondLevelStrength.classList.add('hidden');\n    thirdLevelStrength.classList.add('hidden');\n    fourthLevelStrength.classList.add('hidden');\n\n    //show appropriate indicator\n    if (passLength < 6)\n        firstLevelStrength.classList.remove('hidden');\n    else if (passLength < 8)\n        secondLevelStrength.classList.remove('hidden');\n    else if (passLength < 9)\n        thirdLevelStrength.classList.remove('hidden');\n    else\n        fourthLevelStrength.classList.remove('hidden');\n}\n\n//service functions\n/**\n * Validate account object.\n * Returns validation object with fields - isValid and validationMessage\n *\n * @param account - account object\n * @returns {{email: {isValid: boolean, validationMessage: string}, fName: {isValid: boolean, validationMessage: string}, lName: {isValid: boolean, validationMessage: string}, password: {isValid: boolean, validationMessage: string}, confirmPassword: {isValid: boolean, validationMessage: string}, isValid: boolean}}\n */\nfunction validateAccount(account) {\n    //validation result object default state\n    var validationResult = {\n        email: {\n            isValid: false,\n            validationMessage: \"please, type in valid e-mail!\"\n        },\n        fName: {\n            isValid: false,\n            validationMessage: \"please, type in valid first name!\"\n        },\n        lName: {\n            isValid: false,\n            validationMessage: \"please, type in valid last name!\"\n        },\n        password: {\n            isValid: false,\n            validationMessage: \"please, type in valid password!\"\n        },\n        confirmPassword: {\n            isValid: false,\n            validationMessage: \"confirm password must met password!\"\n        },\n        isValid: false\n    };\n\n    //validate email\n    validationResult.email.isValid = (/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/).test(account.email);\n    //validate first name\n    validationResult.fName.isValid = account.fName.trim().length > 0;\n    //validate last name\n    validationResult.lName.isValid = account.lName.trim().length > 0;\n    //validate password\n    validationResult.password.isValid = (/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{8,50}$/).test(account.password);\n    //validate confirm password\n    validationResult.confirmPassword.isValid = (account.password === account.confirmPassword);\n\n    //whole form validate\n    validationResult.isValid = validationResult.email.isValid && validationResult.fName.isValid && validationResult.lName.isValid && validationResult.password.isValid && validationResult.confirmPassword.isValid\n\n    return validationResult;\n}\n\n\n/**\n * Render validation messages under form fields\n *\n * @param validationResult - object represents form fields validation result\n */\nfunction renderValidationMessages(validationResult) {\n    console.log(validationResult);\n\n    var emailErrorP = document.querySelector('.input-error--email');\n    var fNameErrorP = document.querySelector('.input-error--f_name');\n    var lNameErrorP = document.querySelector('.input-error--l_name');\n    var passwordErrorP = document.querySelector('.input-error--password');\n    var passConfirmationP = document.querySelector('.pass_confirmation > .input-error--password');\n\n    //set validation messages\n    emailErrorP.innerHTML = validationResult.email.validationMessage;\n    fNameErrorP.innerHTML = validationResult.fName.validationMessage;\n    lNameErrorP.innerHTML = validationResult.lName.validationMessage;\n    passwordErrorP.innerHTML = validationResult.password.validationMessage;\n    passConfirmationP.innerHTML = validationResult.confirmPassword.validationMessage;\n\n    //show or hide validation messages refer to isValid flag\n    if (validationResult.email.isValid) emailErrorP.classList.add('hidden'); else emailErrorP.classList.remove('hidden');\n    if (validationResult.fName.isValid) fNameErrorP.classList.add('hidden'); else fNameErrorP.classList.remove('hidden');\n    if (validationResult.lName.isValid) lNameErrorP.classList.add('hidden'); else lNameErrorP.classList.remove('hidden');\n    if (validationResult.password.isValid) passwordErrorP.classList.add('hidden'); else passwordErrorP.classList.remove('hidden');\n    if (validationResult.confirmPassword.isValid) passConfirmationP.classList.add('hidden'); else passConfirmationP.classList.remove('hidden');\n}\n\n/**\n * Construct account object from appropriate form fields\n *\n * @returns {{email: *, fName: *, lName: *, password: *, confirmPassword: *}}\n */\nfunction getAccountObj() {\n    var emailInput = document.querySelector('#email-input');\n    var fNameInput = document.querySelector('#first_name-input');\n    var lNameInput = document.querySelector('#last_name-input');\n    var passwordInput = document.querySelector('#password-input');\n    var confirmPasswordInput = document.querySelector('#password_confirm-input');\n\n    return {\n        email: emailInput.value,\n        fName: fNameInput.value,\n        lName: lNameInput.value,\n        password: passwordInput.value,\n        confirmPassword: confirmPasswordInput.value\n    }\n}\n\n"]}